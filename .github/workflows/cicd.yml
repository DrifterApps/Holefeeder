name: holefeeder ci/cd

on:
  pull_request:
    branches:
    - main
    - master

    paths-ignore:
    - 'proxy/**'
    - 'docs/**'

env:
  DOCKER_REGISTRY: docker.pkg.github.com/drifterapps/holefeeder

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build-version.outputs.version }}

    steps:
    - name: set version
      id: build-version
      run: echo "##[set-output name=version;]$(date +'%y.%m').${{github.run_number}}" 

  build:
    runs-on: ubuntu-latest
    needs: set-version
    env:
      VERSION: ${{ needs.set-version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v2

    - name: docker login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u DrifterApps --password-stdin

    - run: docker-compose pull
      working-directory: ./src

    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - name: build containers
      run: docker-compose build --build-arg holefeeder_version=${{ needs.set-version.outputs.version }}
      working-directory: ./src

  test:
    runs-on: ubuntu-latest
    needs:
    - set-version
    - build
    env:
      VERSION: ${{ needs.set-version.outputs.version }}

    steps:
    - uses: actions/checkout@v2

    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - name: budget api unit tests
      if: ${{ always() }}
      run: docker-compose -f docker-compose-tests.yml -f docker-compose-tests.override.yml run budgeting-api-unit-test
      working-directory: ./src

    - name: budgeting api functional tests
      if: ${{ always() }}
      run: docker-compose -f docker-compose-tests.yml -f docker-compose-tests.override.yml run budgeting-api-functional-test
      working-directory: ./src

    - name: object-store api unit tests
      if: ${{ always() }}
      run: docker-compose -f docker-compose-tests.yml -f docker-compose-tests.override.yml run object-store-api-unit-test
      working-directory: ./src

    - name: object-store api functional tests
      if: ${{ always() }}
      run: docker-compose -f docker-compose-tests.yml -f docker-compose-tests.override.yml run object-store-api-functional-test
      working-directory: ./src

    - name: publish unit test results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: ${{ always() }}
      with:
        check_name: unit-test-results
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: src/tests-results/*.junit.xml

    - name: setup .NET core # Required to execute ReportGenerator
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101

    - name: report generator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.3
      with:
        reports: 'src/tests-results/*/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        sourcedirs: 'src/'
        reporttypes: 'HtmlInline;Cobertura'
        tag: '${{ github.run_number }}_${{ github.run_id }}'

    - name: upload coverage report artifacts
      uses: actions/upload-artifact@v1
      with:
        name: coverage-report
        path: coveragereport
