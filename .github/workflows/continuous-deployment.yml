name: continuous deployment

on:
  pull_request:
    branches:
    - main
    - master

    paths-ignore:
      - 'proxy/**'
      - 'docs/**'

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build-version.outputs.version }}

    steps:
    - name: set version
      id: build-version
      run: echo "##[set-output name=version;]$(date +'%y.%m').${{github.run_number}}" 

  build-and-package:
    runs-on: ubuntu-latest
    needs: set-version

    steps:
    - uses: actions/checkout@v2

    - name: set env values
      run: |
        echo "DOCKER_REGISTRY=docker.pkg.github.com/drifterapps/holefeeder" >> $GITHUB_ENV
        echo "TAG=${{ needs.set-version.outputs.version }}" >> $GITHUB_ENV

    - name: docker login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u DrifterApps --password-stdin

    - run: docker-compose pull
      working-directory: ./src

    - name: build containers
      run: docker-compose build --build-arg holefeeder_version=${{ needs.set-version.outputs.version }}
      working-directory: ./src

    - name: push containers
      run: docker-compose push
      working-directory: ./src

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - set-version
      - build-and-package

    steps:
    - uses: actions/checkout@v2

    - name: set staging env values
      if: github.ref == 'refs/heads/master'
      run: |
        echo "TARGET=holefeeder-staging" >> $GITHUB_ENV
        echo "ENVIRONMENT=Staging" >> $GITHUB_ENV
        echo "ENVIRONMENT_PREFIX=-staging" >> $GITHUB_ENV
        echo "HOLEFEEDER_EXTERNAL_DNS_NAME_OR_IP=holefeeder-staging.drifterapps.com" >> $GITHUB_ENV
        echo "MONGO_ROOT_USER=${{ secrets.MONGODB_ROOT_USER_STAGING }}" >> $GITHUB_ENV
        echo "MONGO_ROOT_PASSWORD=${{ secrets.MONGODB_ROOT_PASSWORD_STAGING }}" >> $GITHUB_ENV
        echo "MONGODB_HOLEFEEDERAPI_USER=${{ secrets.MONGODB_HOLEFEEDERAPI_STAGING }}" >> $GITHUB_ENV
        echo "MONGODB_HOLEFEEDERAPI_PASSWORD=${{ secrets.MONGODB_HOLEFEEDERAPI_PASSWORD_STAGING }}" >> $GITHUB_ENV

    # - name: set production env values
    #   if: github.ref == 'refs/heads/master'
    #   run: |
    #     echo "TARGET=holefeeder-test" >> $GITHUB_ENV
    #     echo "ENVIRONMENT=Production" >> $GITHUB_ENV
    #     echo "ENVIRONMENT_PREFIX=" >> $GITHUB_ENV
    #     echo "HOLEFEEDER_EXTERNAL_DNS_NAME_OR_IP=holefeeder.drifterapps.com" >> $GITHUB_ENV
    #     echo "MONGO_ROOT_USER=${{secrets.MONGODB_ROOT_USER_PROD}}" >> $GITHUB_ENV
    #     echo "MONGO_ROOT_PASSWORD=${{secrets.MONGODB_ROOT_PASSWORD_PROD}}" >> $GITHUB_ENV
    #     echo "MONGODB_HOLEFEEDERAPI_USER=${{secrets.MONGODB_HOLEFEEDERAPI_PROD}}" >> $GITHUB_ENV
    #     echo "MONGODB_HOLEFEEDERAPI_PASSWORD=${{secrets.MONGODB_HOLEFEEDERAPI_PASSWORD_PROD}}" >> $GITHUB_ENV

    - name: create environment file
      run: |
        printf "VERSION=${{ needs.set-version.outputs.version }}
        DOCKER_REGISTRY=docker.pkg.github.com/drifterapps/holefeeder
        TAG=${{ needs.set-version.outputs.version }}
        ENVIRONMENT=${{ env.ENVIRONMENT }}
        ENVIRONMENT_PREFIX=${{ env.ENVIRONMENT_PREFIX }}
        HOLEFEEDER_EXTERNAL_DNS_NAME_OR_IP=${{ env.HOLEFEEDER_EXTERNAL_DNS_NAME_OR_IP }}
        MONGO_CONNECTION_STRING=mongodb://${{ env.MONGODB_HOLEFEEDERAPI_USER }}:${{ env.MONGODB_HOLEFEEDERAPI_PASSWORD }}@nosql-data/?authSource=holefeeder
        MONGO_ROOT_USER=${{ env.MONGO_ROOT_USER }}
        MONGO_ROOT_PASSWORD=${{ env.MONGO_ROOT_PASSWORD }}
        MONGO_DATABASE_NAME=holefeeder
        MONGO_DATABASE_VOLUME=./data
        SEQ_ApiKey=${{ secrets.SEQ_APIKEY }}
        " > .env
      working-directory: ./src

    - name: copy file
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.PROD_WEB_SERVER }}
        USERNAME: ${{ secrets.PROD_WEB_SERVER_USER }}
        PORT: ${{ secrets.PROD_WEB_SERVER_PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        source: "src/docker-compose.yml,src/docker-compose.prod.yml,src/.env"
        target: ${{ env.TARGET }}
        strip_components: 1
     
    - name: starting containers
      uses: appleboy/ssh-action@master
      env:
        HOST: ${{ secrets.PROD_WEB_SERVER }}
        USERNAME: ${{ secrets.PROD_WEB_SERVER_USER }}
        PORT: ${{ secrets.PROD_WEB_SERVER_PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        script: |
          cd ${{ env.TARGET }}
          echo registry login
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u DrifterApps --password-stdin
          echo start containers
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
          echo cleanup previous images
          docker image prune -f
