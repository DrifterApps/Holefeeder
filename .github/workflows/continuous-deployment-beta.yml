name: Continous deployment BETA

on:
  push:
    branches: 
      - release/*
      - hotfix/*
    
    paths-ignore:
      - proxy/**
      - docs/**
      - poc/**
      - imports/**
      - tools/**

jobs:
  Package-Budget-API:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201

    - name: Install dependencies
      run: dotnet restore ./src

    - name: Build sources
      run: dotnet publish --no-restore --output ./publish/DrifterApps.Holefeeder.ServicesHosts.BudgetApi ./src/DrifterApps.Holefeeder.ServicesHosts.BudgetApi/DrifterApps.Holefeeder.ServicesHosts.BudgetApi.csproj

    - name: Docker login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u DrifterApps --password-stdin

    - name: Package
      run: |
        docker build --pull -t docker.pkg.github.com/drifterapps/holefeeder/holefeeder-api:beta -f docker/api.dockerfile .
        docker push docker.pkg.github.com/drifterapps/holefeeder/holefeeder-api:beta

  Package-Budget-UI:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '13.x'

    - name: Install dependencies
      run: npm install
      working-directory: ./src/DrifterApps.Holefeeder.Presentations.UI

    - name: Build sources
      run: npm run-script build -- --configuration=beta --aot=true --outputHashing=all --outputPath=../../publish/DrifterApps.Holefeeder.Presentations.UI --sourceMap=false
      working-directory: ./src/DrifterApps.Holefeeder.Presentations.UI

    - name: Docker login
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u DrifterApps --password-stdin

    - name: Package
      run: |
        docker build --pull -t docker.pkg.github.com/drifterapps/holefeeder/holefeeder-web:beta -f docker/web.dockerfile .
        docker push docker.pkg.github.com/drifterapps/holefeeder/holefeeder-web:beta

  Deploy:
    runs-on: ubuntu-latest
    needs: 
      - Package-Budget-API
      - Package-Budget-UI

    steps:
    - uses: actions/checkout@v2

    - name: Create environment file
      run: |
        printf "DATABASE_URL=${{secrets.DATABASE_URL_BETA}}\nDATABASE_NAME=${{secrets.DATABASE_NAME_BETA}}\nGoogle:ClientId=${{secrets.GOOGLE_CLIENT_ID}}/n" > api.environment.env
        printf "MONGO_INITDB_ROOT_USERNAME=${{secrets.MONGODB_ROOT_USER_BETA}}\nMONGO_INITDB_ROOT_PASSWORD=${{secrets.MONGODB_ROOT_PASSWORD_BETA}}\n" > mongo.environment.env
      working-directory: ./docker/beta

    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.PROD_WEB_SERVER }}
        USERNAME: ${{ secrets.PROD_WEB_SERVER_USER }}
        PORT: ${{ secrets.PROD_WEB_SERVER_PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        source: "docker/beta/docker-compose.yml,docker/beta/api.environment.env,docker/beta/mongo.environment.env"
        target: "holefeeder-beta"
        strip_components: 1
     
    - name: Starting containers
      uses: appleboy/ssh-action@master
      env:
        HOST: ${{ secrets.PROD_WEB_SERVER }}
        USERNAME: ${{ secrets.PROD_WEB_SERVER_USER }}
        PORT: ${{ secrets.PROD_WEB_SERVER_PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        script: |
          cd holefeeder-beta/beta
          echo Pull container
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u DrifterApps --password-stdin
          docker pull docker.pkg.github.com/drifterapps/holefeeder/holefeeder-api:beta
          docker pull docker.pkg.github.com/drifterapps/holefeeder/holefeeder-web:beta
          echo Pull standard containers
          # echo ${{ secrets.GITHUB_TOKEN }} | docker login -u DrifterApps --password-stdin
          docker pull mongo:latest
          echo Start containers
          docker-compose up --force-recreate --build -d
          echo Cleanup previous images
          docker image prune -f
