image: docker:git

services:
  - docker:dind

variables:
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  TEST_IMAGE: registry.gitlab.com/drifterapps/${HOLEFEEDER_WEB_DOCKER_NAME}:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: registry.gitlab.com/drifterapps/${HOLEFEEDER_WEB_DOCKER_NAME}:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker info
  
stages:
  - build
  - release
  - deploy

build:
  stage: build
  script:
    - docker build --pull -t $TEST_IMAGE -f prod.dockerfile .
    - docker push $TEST_IMAGE

release:
  stage: release
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  only:
    - master

deploy_prod:
  stage: deploy
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    # 
    - ssh-keyscan -p ${PROD_WEB_SERVER_PORT} ${PROD_WEB_SERVER} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp -P ${PROD_WEB_SERVER_PORT} ./docker-compose.yml ${PROD_WEB_SERVER_USER}@${PROD_WEB_SERVER}:~/${HOLEFEEDER_WEB_DOCKER_NAME}
    - |
      ssh -p ${PROD_WEB_SERVER_PORT} ${PROD_WEB_SERVER_USER}@${PROD_WEB_SERVER} 'bash -s' << EOF
      echo docker login
      echo "$CI_BUILD_TOKEN" | docker login --username gitlab-ci-token --password-stdin registry.gitlab.com
      cd ${HOLEFEEDER_WEB_DOCKER_NAME}
      echo start container
      docker pull $RELEASE_IMAGE
      docker-compose up --force-recreate --build -d
      echo cleanup previous images
      docker image prune -f
      EOF
  environment:
    name: production
    url: https://holefeeder.drifterapps.com
  only:
  - master
